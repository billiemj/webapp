{"version":3,"sources":["components/layout/logo.png","components/layout/Logo.js","components/layout/Header.js","components/media/Home.js","components/media/AddMedia.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","props","branding","react_default","a","createElement","className","react_router_dom","to","src","logo","alt","defaultProps","Header","layout_Logo","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Home","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSelect","bind","assertThisInitialized","state","index","direction","selectedIndex","e","setState","_this$state","Carousel","activeIndex","onSelect","Item","Caption","Component","AddMedia","App","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f451d48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3f0e09a7.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"./logo.png\";\r\n\r\nconst Logo = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <div>\r\n      <p className=\"text-left\">\r\n        <Link to=\"/\" className=\"text-decoration-none text-secondary \">\r\n          <img src={logo} alt={branding} />\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogo.defaultProps = {\r\n  branding: \"Bazinga\"\r\n};\r\n\r\nLogo.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"./Logo\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <div className=\"mb-5\">\r\n      <Logo />\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark  \">\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarTogglerDemo01\"\r\n          aria-controls=\"navbarTogglerDemo01\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n          <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item \">\r\n              <Link to=\"/media/add-media\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add Media\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"Bazinga\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\n\r\nclass Home extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n\r\n    this.state = {\r\n      index: 0,\r\n      direction: null\r\n    };\r\n  }\r\n\r\n  handleSelect(selectedIndex, e) {\r\n    this.setState({\r\n      index: selectedIndex,\r\n      direction: e.direction\r\n    });\r\n  }\r\n  render() {\r\n    const { index, direction } = this.state;\r\n\r\n    return (\r\n      <Carousel\r\n        activeIndex={index}\r\n        direction={direction}\r\n        onSelect={this.handleSelect}\r\n      >\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"http://placeimg.com/440/280/any\"\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>First slide labels</h3>\r\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"http://placeimg.com/440/280/animals\"\r\n            alt=\"Third slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Second slide label</h3>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"http://placeimg.com/440/280/people\"\r\n            alt=\"Third slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Third slide label</h3>\r\n            <p>\r\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n            </p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class AddMedia extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-1\">Add Media</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./components/layout/Header\";\r\nimport Home from \"./components/media/Home\";\r\nimport AddMedia from \"./components/media/AddMedia\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header branding=\"bazinga\" />\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/media/add-media\" component={AddMedia} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}