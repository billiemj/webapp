{"map":"{\"version\":3,\"sources\":[\"D:\\\\Project\\\\webapp\\\\bazinga\\\\src\\\\components\\\\layout\\\\Header.js\",\"D:\\\\Project\\\\webapp\\\\bazinga\\\\src\\\\components\\\\media\\\\Home.js\",\"D:\\\\Project\\\\webapp\\\\bazinga\\\\src\\\\components\\\\media\\\\AddMedia.js\",\"D:\\\\Project\\\\webapp\\\\bazinga\\\\src\\\\App.js\",\"D:\\\\Project\\\\webapp\\\\bazinga\\\\src\\\\serviceWorker.js\",\"D:\\\\Project\\\\webapp\\\\bazinga\\\\src\\\\index.js\"],\"names\":[\"Header\",\"props\",\"branding\",\"react_default\",\"a\",\"createElement\",\"className\",\"href\",\"class\",\"react_router_dom\",\"to\",\"defaultProps\",\"Home\",\"Component\",\"AddMedia\",\"App\",\"layout_Header\",\"react_router\",\"exact\",\"path\",\"component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"8QAIMA,EAAS,SAAAC,GAAS,IACdC,EAAaD,EAAbC,SACR,OACEC,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,IAAA,CAAGC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,IAAA,CAAGE,KAAK,IAAID,UAAU,wCACnBJ,IAGLC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAA,CAAIG,MAAM,mCACRL,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,IAAIJ,UAAU,YACrBH,EAAAC,EAAAC,cAAA,IAAA,CAAGC,UAAU,gBADf,UAIFH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,mBAAmBJ,UAAU,YACpCH,EAAAC,EAAAC,cAAA,IAAA,CAAGC,UAAU,gBADf,oBAWdN,EAAOW,aAAe,CACpBT,SAAU,WAOGF,IAAAA,EAAAA,ECvCMY,mLAEjB,OACET,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,aAAd,gBAJ0BO,EAAAA,WCAbC,mLAEjB,OACEX,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,aAAd,qBAJ8BO,EAAAA,WC0BvBE,gMAlBX,OACEZ,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACW,EAAD,CAAQd,SAAS,YACjBC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACEd,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWR,IACjCT,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,mBAAmBC,UAAWN,IAFlD,0BAGwBA,EAHxB,iBAPMD,EAAAA,YCIEQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOxB,EAAAC,EAAAC,cAACuB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from \\\"react\\\";\\r\\nimport PropTypes from \\\"prop-types\\\";\\r\\nimport { Link } from \\\"react-router-dom\\\";\\r\\n\\r\\nconst Header = props => {\\r\\n  const { branding } = props;\\r\\n  return (\\r\\n    <div>\\r\\n      <p className=\\\"text-left display-4\\\">\\r\\n        <a href=\\\"/\\\" className=\\\"text-decoration-none text-secondary \\\">\\r\\n          {branding}\\r\\n        </a>\\r\\n      </p>\\r\\n      <nav className=\\\"navbar navbar-expand-sm navbar-dark bg-secondary mb-3 py-0\\\">\\r\\n        <div className=\\\"container\\\">\\r\\n          <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\r\\n            <li className=\\\"nav-item\\\">\\r\\n              <Link to=\\\"/\\\" className=\\\"nav-link\\\">\\r\\n                <i className=\\\"fas fa-home\\\" /> Home\\r\\n              </Link>\\r\\n            </li>\\r\\n            <li className=\\\"nav-item\\\">\\r\\n              <Link to=\\\"/media/add-media\\\" className=\\\"nav-link\\\">\\r\\n                <i className=\\\"fas fa-plus\\\" /> Add Media\\r\\n              </Link>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </nav>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nHeader.defaultProps = {\\r\\n  branding: \\\"Bazinga\\\"\\r\\n};\\r\\n\\r\\nHeader.propTypes = {\\r\\n  branding: PropTypes.string.isRequired\\r\\n};\\r\\n\\r\\nexport default Header;\\r\\n\",\"import React, { Component } from \\\"react\\\";\\r\\n\\r\\nexport default class Home extends Component {\\r\\n  render() {\\r\\n    return (\\r\\n      <div>\\r\\n        <h1 className=\\\"display-1\\\">Home</h1>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\",\"import React, { Component } from \\\"react\\\";\\r\\n\\r\\nexport default class AddMedia extends Component {\\r\\n  render() {\\r\\n    return (\\r\\n      <div>\\r\\n        <h1 className=\\\"display-1\\\">Add Media</h1>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\",\"import React, { Component } from \\\"react\\\";\\nimport { BrowserRouter as Router, Route, Switch } from \\\"react-router-dom\\\";\\nimport Header from \\\"./components/layout/Header\\\";\\nimport Home from \\\"./components/media/Home\\\";\\nimport AddMedia from \\\"./components/media/AddMedia\\\";\\nimport \\\"bootstrap/dist/css/bootstrap.min.css\\\";\\nimport \\\"./App.css\\\";\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <Router>\\n        <div className=\\\"App\\\">\\n          <Header branding=\\\"bazinga\\\" />\\n          <div className=\\\"container\\\">\\n            <Switch>\\n              <Route exact path=\\\"/\\\" component={Home} />\\n              <Route exact path=\\\"/media/add-media\\\" component={AddMedia} />}\\n              add-media\\\" component={AddMedia} />\\n            </Switch>\\n          </div>\\n        </div>\\n      </Router>\\n    );\\n  }\\n}\\n\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{22:function(e,a,t){e.exports=t(38)},27:function(e,a,t){},37:function(e,a,t){},38:function(e,a,t){\"use strict\";t.r(a);var n=t(0),c=t.n(n),r=t(19),l=t.n(r),i=(t(27),t(6)),o=t(7),m=t(9),s=t(8),d=t(10),u=t(12),p=t(5),b=function(e){var a=e.branding;return c.a.createElement(\"div\",null,c.a.createElement(\"p\",{className:\"text-left display-4\"},c.a.createElement(\"a\",{href:\"/\",className:\"text-decoration-none text-secondary \"},a)),c.a.createElement(\"nav\",{className:\"navbar navbar-expand-sm navbar-dark bg-secondary mb-3 py-0\"},c.a.createElement(\"div\",{className:\"container\"},c.a.createElement(\"ul\",{class:\"navbar-nav mr-auto mt-2 mt-lg-0\"},c.a.createElement(\"li\",{className:\"nav-item\"},c.a.createElement(u.b,{to:\"/\",className:\"nav-link\"},c.a.createElement(\"i\",{className:\"fas fa-home\"}),\" Home\")),c.a.createElement(\"li\",{className:\"nav-item\"},c.a.createElement(u.b,{to:\"/media/add-media\",className:\"nav-link\"},c.a.createElement(\"i\",{className:\"fas fa-plus\"}),\" Add Media\"))))))};b.defaultProps={branding:\"Bazinga\"};var v=b,E=function(e){function a(){return Object(i.a)(this,a),Object(m.a)(this,Object(s.a)(a).apply(this,arguments))}return Object(d.a)(a,e),Object(o.a)(a,[{key:\"render\",value:function(){return c.a.createElement(\"div\",null,c.a.createElement(\"h1\",{className:\"display-1\"},\"Home\"))}}]),a}(n.Component),f=function(e){function a(){return Object(i.a)(this,a),Object(m.a)(this,Object(s.a)(a).apply(this,arguments))}return Object(d.a)(a,e),Object(o.a)(a,[{key:\"render\",value:function(){return c.a.createElement(\"div\",null,c.a.createElement(\"h1\",{className:\"display-1\"},\"Add Media\"))}}]),a}(n.Component),h=(t(36),t(37),function(e){function a(){return Object(i.a)(this,a),Object(m.a)(this,Object(s.a)(a).apply(this,arguments))}return Object(d.a)(a,e),Object(o.a)(a,[{key:\"render\",value:function(){return c.a.createElement(u.a,null,c.a.createElement(\"div\",{className:\"App\"},c.a.createElement(v,{branding:\"bazinga\"}),c.a.createElement(\"div\",{className:\"container\"},c.a.createElement(p.c,null,c.a.createElement(p.a,{exact:!0,path:\"/\",component:E}),c.a.createElement(p.a,{exact:!0,path:\"/media/add-media\",component:f}),'} add-media\" component=',f,\" />\"))))}}]),a}(n.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(c.a.createElement(h,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[22,1,2]]]);","extractedComments":[]}